@using Sandbox
@using Sandbox.UI

@implements INavigatorPage
@inherits Panel
@attribute [StyleSheet]
@namespace Facepunch.Gunfight.MainMenu

<root>
	<div class="main">
		<div class="left column grow">
			<div class="game-title">
				Gunfight
			</div>

            <label class="stats-title">Stats</label>

            <div class="stat">
                <i>feed</i>
                <label>Current Level: @Progression.Levelling.CurrentLevel</label>
            </div>

            <div class="stat">
                <i>feed</i>
                <label>Total Experience: @Progression.Levelling.TotalExperience.ToString( "N0" )</label>
            </div>

            <div class="stat">
                <i>feed</i>
                <label>Required Experience For Next Level: @Progression.Levelling.GetRequiredExperienceForLevel( Progression.Levelling.CurrentLevel + 1 ).ToString( "N0" )</label>
            </div>

            <div class="stat">
                <i>feed</i>
                <label>Total Matches Played: @Progression.MatchHistory.Count().ToString( "N0" )</label>
            </div>
			
			<div style="flex-grow: 1;"/>

            <ActionButton onclick=@ResetXP>
				<Title>
					Reset XP
				</Title>
                <Description>
                    This is a destructive change. You can't get your XP back.
                </Description>
                <Extra>
                    <i style="color:red;font-size: 40px;">priority_high</i>
                </Extra>
			</ActionButton>

			<ActionButton onclick=@Return>
				<Title>
					Return
				</Title>
			</ActionButton>
		</div>

        <div class="right column grow">			
			<div class="game-title">
				Match History
			</div>

            @foreach ( var match in Progression.MatchHistory.Get() )
            {
                <MatchCard Match=@match />
            }

            @if ( Progression.MatchHistory.Count() < 1 )
            {
                <label>No matches recorded yet...</label>
            }
			
			<div style="flex-grow: 1;"/>
		</div>
	</div>
</root>

@code
{
    void Quit( PanelEvent e )
    {
        Game.Menu.Close();
    }

    void Respawn( PanelEvent e )
    {
        ConsoleSystem.Run( "kill" );

        Game.Menu.HideMenu();
    }

    void Disconnect( PanelEvent e )
    {
        Game.Menu.LeaveServer( "Leaving" );
        this.Navigate( "/" );
    }

    void ResetXP( PanelEvent e )
    {
        Progression.Levelling.Reset();
    }

    void Return( PanelEvent e )
    {
        this.Navigate( "/" );
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Progression.Levelling.TotalExperience );
    }
}
