@using Sandbox.UI;
@using Sandbox.UI.Construct;

@namespace Facepunch.Gunfight.UI
@inherits Panel

<root>
    <div class="background" />

    @if ( Weapon.IsValid() )
    {
        <div class="weapon-viewer">
            <WeaponViewer Weapon=@CCWeapon @ref=WeaponViewer />
        </div>

        <div class="info">
            <div class="row">
                <label class="currentammo">@Weapon.AmmoClip</label>
                <label class="inventory">@Weapon.AvailableAmmo()</label>
            </div>

            <label class="gunname">@Weapon.Name</label>
        </div>

        <InputHint Button="SwitchWeapon" />
    }
</root>

@code
{
    public GunfightWeapon Weapon { get; set; }

    public WeaponViewer WeaponViewer { get; set; }
    public CreateAClass.Weapon CCWeapon => new()
    {
        Name = Weapon.ShortName,
        Attachments = Weapon.Attachments.Select( x => x.Identifier ).ToList()
    };

    protected override int BuildHash()
    {
        return HashCode.Combine( Weapon, Weapon?.AmmoClip, Weapon?.AvailableAmmo(), GunfightCamera.Target, GunfightCamera.Target?.LifeState );
    }

    protected override void OnAfterTreeRender( bool firstTime )
    {
        base.OnAfterTreeRender( firstTime );

        var player = GunfightCamera.Target;
        var weapon = Weapon;

        SetClass( "active", weapon != null && player.LifeState == LifeState.Alive );

        if ( weapon == null ) return;

        var inv = weapon.AvailableAmmo();
        var current = weapon.AmmoClip;

        SetClass( "active", inv >= 0 );
        SetClass( "low", weapon.IsLowAmmo() );

        WeaponViewer.NoRotation = true;
        WeaponViewer.Update();
    }
}
