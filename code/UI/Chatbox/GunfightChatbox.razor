@using Sandbox.UI;

@attribute [StyleSheet( "/UI/Chatbox/Chatbox.scss" )]
@namespace Facepunch.Gunfight.UI

<root class="chatbox">
	<div class="canvas" @ref=Canvas>
		<!-- chatbox entries -->
	</div>

	<TextEntry @ref=Input>
		<div class="send">
			<label>send</label>
		</div>
	</TextEntry>
</root>

@code
{
	public static GunfightChatbox Current;

	public Panel Canvas { get; protected set; }
	public TextEntry Input { get; protected set; }

	public bool IsOpen
	{
		get => HasClass( "open" );
		set
		{
			SetClass( "open", value );
			if ( value )
			{
				Input.Focus();
				Input.Text = string.Empty;
				Input.Label.SetCaretPosition( 0 );
			}
		}
	}

	protected override void OnAfterTreeRender( bool firstTime )
	{
		base.OnAfterTreeRender( firstTime );

		Canvas.PreferScrollToBottom = true;
		Input.AddEventListener( "onsubmit", () => Submit() );
		Input.AddEventListener( "onblur", () => Close() );
		Input.AcceptsFocus = true;
		Input.AllowEmojiReplace = true;

        Current = this;
	}

	public override void Tick()
	{
		if ( Sandbox.Input.Pressed( InputButton.Chat ) )
			Open();

		Input.Placeholder = string.IsNullOrEmpty( Input.Text ) ? "Enter your message..." : string.Empty;
	}

	protected override void OnClick( MousePanelEvent e )
	{
		base.OnClick( e );

		Submit();
	}

	void Open()
	{
		AddClass( "open" );
		Input.Focus();
		Canvas.TryScrollToBottom();
	}

	void Close()
	{
		RemoveClass( "open" );
		Input.Blur();
	}

	void Submit()
	{
		Close();

		var msg = Input.Text.Trim();
		Input.Text = "";

		if ( string.IsNullOrWhiteSpace( msg ) )
			return;

		Say( msg );
	}

    public void AddEntry( string name, string message, long playerId = 0, string lobbyState = null, bool isMessage = true )
	{
		var e = Canvas.AddChild<ChatboxRow>();
		e.IsChatMessage = isMessage;

		var player = Local.Pawn;
		if ( player == null ) return;
		if ( Local.Pawn is GunfightPlayer pl )
		{
			if ( playerId > 0 )
				e.PlayerId = playerId;

			e.Message = message;
			e.Name = $"{name}";

			e.SetClass( "noname", string.IsNullOrEmpty( name ) );
			e.SetClass( "noavatar", playerId == 0 );
		}

		if ( lobbyState == "ready" || lobbyState == "staging" )
		{
			e.SetClass( "is-lobby", true );
		}

		Canvas.TryScrollToBottom();
	}
}
