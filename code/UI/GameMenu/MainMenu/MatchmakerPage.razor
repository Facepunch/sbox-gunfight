@using Sandbox
@using Sandbox.UI

@implements INavigatorPage
@inherits Panel
@attribute [StyleSheet]
@namespace Facepunch.Gunfight.MainMenu

<root>
	<div class="main">
		<div class="left column grow">
			<div class="game-title">
				Gunfight
			</div>

			<div class="game-subtitle">
				Dying to get into the action?
			</div>
			
			<div style="flex-grow: 1;"/>
			
			<ExpandWidget>
				<Title>
					Modes
				</Title>
				<Body>
				<div class="mode-list">
					<ActionButton onclick=@(() => SetMode( "WarGamemode" ))>
						<Title>
							War Room
						</Title>
						<Extra>
							<Panel class="new"/>
						</Extra>
					</ActionButton>
					
					<ActionButton onclick=@(() => SetMode( "KillConfirmedGamemode" ))>
						<Title>
							Kill Confirmed
						</Title>
						<Extra>
							<Panel class="new"/>
						</Extra>
					</ActionButton>
					<ActionButton onclick=@(() => SetMode( "GunfightGamemode" ))>
						<Title>
							Gunfight (2v2)
						</Title>
						<Extra>
							<Panel class="new"/>
						</Extra>
					</ActionButton>
				</div>
				</Body>
			</ExpandWidget>

			<ActionButton onclick=@Return>
				<Title>
					Return
				</Title>
				<Extra>
					<Panel class="new"/>
				</Extra>
			</ActionButton>
		</div>
		
		<div style="flex-grow: 1;"/>

		<div class="right column grow">
			<div style="flex-grow: 1;"/>

			<ExpandWidget>
            	<Title>
	                <label>Maps - @SelectedMaps.Count selected</label>
            	</Title>
            	<Body>
                <PackageList OnUpdate=@OnMapSelectionChanged MaxSelection=@(0)>
	                <WhenNothingFound>
		                <label>No maps found...</label>
	                </WhenNothingFound>
	                <WhenSearching>
		                <label>Searching for maps...</label>
	                </WhenSearching>
                </PackageList>
            	</Body>
            </ExpandWidget>

			<ActionButton onclick=@Search>
				<Title>
					Search
				</Title>
				<Extra>
					<i>search</i>
				</Extra>
			</ActionButton>
		</div>
	</div>
</root>

@code
{
	List<Package> SelectedMaps { get; set; } = new();
	string SelectedMode { get; set; } = "KillConfirmedGamemode";
	
	void OnMapSelectionChanged( List<Package> packages )
	{
		SelectedMaps = packages;
	}

	void SetMode( string mode )
	{
		SelectedMode = mode;
	}
	
	void Search()
	{
		_ = StartSearching();
	}

	async Task StartSearching()
	{
		// Need to select a map.
		if ( SelectedMaps.Count < 1 ) return;
		
		var result = await MatchmakingSystem.Search( SelectedMode, 
			SelectedMaps.Select( x => x.FullIdent ).ToArray() );

		// If we don't have a result, and we've been only matchmaking for less than 60s, search
		if ( !result )
		{
			if ( MatchmakingSystem.TimeSinceSearch < 60 )
			{
				_ = StartSearching();
			}
			// If we've been searching for a while, let's make our own session with a random map from the selection?
			else
			{
				MatchmakingSystem.CurrentState = MatchmakingSystem.State.Empty;
				await Game.Menu.StartServerAsync( 16, "My Gunfight Game", Game.Random.FromList( SelectedMaps ).FullIdent );
			}
		}
	}
	
	void Return()
	{
		this.Navigate( "/" );
	}
}
