@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@attribute [StyleSheet( "/UI/LoadoutPanel/LoadoutPanel.scss" )]
@namespace Facepunch.Gunfight.UI

<root>
    <div class="header">
        <label>Your loadout</label>
    </div>

    @if ( Loadout == null )
        return;

    @if ( Loadout.PrimaryWeapon.IsSet )
    {
        <div class="entry @(Loadout.PrimaryWeapon.HasAttachments ? "has-attachments" : "")">
            <image class="icon" src="@Loadout.PrimaryWeapon.Definition.Icon" />
            <label class="name">@Loadout.PrimaryWeapon.NiceName</label>

            @if ( Loadout.PrimaryWeapon.HasAttachments )
            {
                <div class="attachments">
                    @foreach ( var attachment in Loadout.PrimaryWeapon.Attachments )
			        {
				        var library = TypeLibrary.GetDescription( attachment );
				        if ( library is null ) continue;

                        <div class="attachment">
                            <label class="name">@library.Title</label>
                        </div>
			        }
                </div>
            }
        </div>
    }
    else
    {
        <div class="entry empty">
            <label class="name">No primary weapon</label>
        </div>
    }

    @if ( Loadout.SecondaryWeapon.IsSet )
    {
        <div class="entry @(Loadout.SecondaryWeapon.HasAttachments ? "has-attachments" : "")">
            <image class="icon" src="@Loadout.SecondaryWeapon.Definition.Icon" />
            <label class="name">@Loadout.SecondaryWeapon.NiceName</label>

            @if (Loadout.SecondaryWeapon.Attachments != null && Loadout.SecondaryWeapon.Attachments.Count > 0)
            {
                <div class="attachments">
                    @foreach ( var attachment in Loadout.SecondaryWeapon.Attachments )
			        {
				        var library = TypeLibrary.GetDescription( attachment );
				        if ( library is null ) continue;

                        <div class="attachment">
                            <label class="name">@library.Title</label>
                        </div>
			        }
                </div>
            }
        </div>
    }
    else
    {
        <div class="entry empty">
            <label class="name">No secondary weapon</label>
        </div>
    }
</root>

@code
{
    public Loadout Loadout => (GamemodeSystem.Current as GunfightGamemode).CurrentLoadout;

    protected override void OnAfterTreeRender( bool firstTime )
    {
        Current = this;

        _ = DeleteSoon();
    }

    async Task DeleteSoon()
    {
        await GameTask.DelaySeconds( 10 );
        Delete();
    }
}
