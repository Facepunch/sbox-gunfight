@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Facepunch.Gunfight.UI

<style>
    WeaponPanel {
        width: 320px;
        height: 120px;
        margin-bottom: 16px;
        background-color: rgba(40, 38, 38, 0.5);
        border: 2px solid rgba(0, 0, 0, 0.2);
        border-right: 2px solid #FFCF26;

        &.has-attachments {
            height: 148px;
        }

        justify-content: flex-end;
        align-items: center;
        align-content: stretch;

        > .icon {
            height: 90%;
            aspect-ratio: 2;
            background-size: cover;
            margin-right: 10%;
        }

        > .label {
            position: absolute;
            margin-left: 8px;
            top: 80px;
            font-family: Oxanium;
            font-weight: 600;
            font-size: 24px;
            color: #FFCF26;
            text-transform: uppercase;
        }

        &.empty {
            height: 50px;

            > .name {
                top: 9px;
                color: rgba( white, 0.8 );
            }
        }

        > .placeholder {
            color: rgba( white, 0.8 );
        }

        &.no-name {
            > .name {
                display: none;
            }

            height: 80px;
        }

        > .attachments {
            position: absolute;
            width: 100%;
            bottom: 6px;
            margin-left: 8px;

            > .attachment {
                > .name {
                    align-items: center;
                    font-family: Oxanium;
                    font-weight: 600;
                    font-size: 16px;
                    color: rgba( white, 0.9 );
                    margin-right: 8px;
                }
            }
        }
    }
</style>

<root class="@GetClasses()">
    @if ( Definition != null )
    {
        <img class="icon" src="@Definition.Icon" />
    }
    else
    {
        <text class="placeholder">NO WEAPON</text>
    }
</root>

@code
{
    protected WeaponDefinition Definition;
    public bool HideName = false;

    public string Weapon
    {
        set
        {
            Definition = WeaponDefinition.Find( value );
        }
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Definition );
    }

    public string GetClasses()
    {
        if ( HideName ) return "no-name";

        return "";
    }
}
