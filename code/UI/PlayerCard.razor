@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Facepunch.Gunfight.UI

<style>
    PlayerCard {
        .name {
            margin-left: 4px;
            font-size: 24px;
            font-family: Oxanium;
            font-weight: 600;
            color: white;

            justify-content: center;
            align-items: center;
            align-content: stretch;
        }

        .avatar {
            height: 45px;
            aspect-ratio: 1;
        }

        &.friend {
            .name {
                color: rgba( #1AE7F4, 1 );
            }

            .avatar {
                border: 2px solid rgba( #1AE7F4, 0.8 );
            }
        }

        &.enemy {
            .name {
                color: rgba( red, 1 );
            }

            .avatar {
                border: 2px solid rgba( red, 0.8 );
            }
        }
    }
</style>

<root class="@FriendClasses()">
    <img class="avatar" src="avatar:@Client.PlayerId" />
    <text class="name">@Client.Name</text>
</root>

@code
{
    public Client Client { get; set; }

    // Bit of a hack to get other templates to easily be able to add their own player cards without C#
    // ex: <PlayerCard PlayerId="@Attacker.PlayerId">
    public long PlayerId
    { 
        get => Client.PlayerId;
        set
        {
            var cl = Client.All.FirstOrDefault( x => x.PlayerId == value );
            if ( cl.IsValid() ) Client = cl;
        }
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Client );
    }

    protected string FriendClasses()
    {
		var cl = Client;
		if ( cl == null ) return "disconnected";

		var friendState = TeamSystem.GetFriendState( cl.GetTeam(), TeamSystem.MyTeam );

		if ( friendState == TeamSystem.FriendlyStatus.Friendly ) return "friend";
		if ( friendState == TeamSystem.FriendlyStatus.Hostile ) return "enemy";
		if ( friendState == TeamSystem.FriendlyStatus.Neutral ) return "neutral";

		return "nothing";
    }
}