@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Facepunch.Gunfight.UI

<style>
    WinningTeamDisplay {
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        right: 0;
        justify-content: center;
        align-items: center;
        align-content: center;
        transition: all 0.2s ease;

        z-index: 98;

        &:intro {
            opacity: 0;

        }

        > .canvas {
            flex-direction: column;
            margin-bottom: 100px;
            
            > .header {
                text-align: center;
                justify-content: center;
                align-items: center;
                align-content: center;
                
                padding: 15px;
                padding-left: 300px;
                padding-right: 300px;

                label {
                    top: 2px;
                    text-transform: uppercase;
                    font-family: Oxanium;
                    font-weight: 700;
                    font-size: 70px;
                    color: #FFCF26;
                    text-shadow: 0px 0px 5px rgba( black, 0.5 );
                }
            }

            > .main {
                padding: 20px;

                justify-content: center;
                align-items: center;
                align-content: stretch;

                > .team {
                    top: 2px;
                    text-transform: uppercase;
                    font-family: Oxanium;
                    font-weight: 600;
                    font-size: 24px;
                    text-shadow: 0px 0px 5px rgba( black, 0.5 );

                }
            
                > .text {
                    top: 2px;
                    text-transform: uppercase;
                    font-family: Oxanium;
                    font-weight: 600;
                    font-size: 22px;
                    color: #FFCF26;
                    text-shadow: 0px 0px 5px rgba( black, 0.5 );
    
                }
            }
        }

        &.friend {
            background-image: linear-gradient( to top, rgba(#52afec, 0) 0%, rgba(#52afec, 0) 30%, rgba(#52afec, 0.15) 100%);
            .team {
                color: rgba( #52afec, 0.8 );
            }

            > .canvas { 
                > .header {
                    background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(#52afec, 0.9) 45%, rgba(#52afec, 0.9) 50%, rgba(#52afec, 0.9) 55%, rgba(0, 0, 0, 0) 100% );
                }
            }
        }

        &.enemy {
            background-image: linear-gradient( to top, rgba(#F53F16, 0) 0%, rgba(#F53F16, 0) 30%, rgba(#F53F16, 0.15) 100%);
            .team {
                color: rgba( #F53F16, 0.8 );
            }

            > .canvas { 
                > .header {
                    background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(#F53F16, 0.9) 45%, rgba(#F53F16, 0.9) 50%, rgba(#F53F16, 0.9) 55%, rgba(0, 0, 0, 0) 100% );
                }
            }
        }

        &.neutral {
            background-image: linear-gradient( to top, rgba(#A8A8A8, 0) 0%, rgba(#A8A8A8, 0) 30%, rgba(#A8A8A8, 0.15) 100%);

            > .canvas { 
                > .header {
                    background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(#A8A8A8, 0.9) 45%, rgba(#A8A8A8, 0.9) 50%, rgba(#A8A8A8, 0.9) 55%, rgba(0, 0, 0, 0) 100% );
                }
            }
        }
    }
</style>

<root class="@TeamClasses()">
    <div class="canvas">
        @if ( Team == Team.Unassigned )
        {
            <div class="header">
                <label>DRAW</label>
            </div>

            <div class="main">
                <label class="text">NOBODY WINS</label>
            </div>
    
            return;
        }

        <div class="header">
            @if ( Winner )
            {
                <label>VICTORY</label>
            }
            else
            {
                <label>DEFEAT</label>
            }
        </div>

        <div class="main">
            <label class="team">@Team.GetName()</label> <label class="text">IS THE WINNER</label>
        </div>
    </div>
</root>

@code
{
    public static bool Visible;

    public Team Team = Team.Unassigned;
    public bool Winner => TeamSystem.GetFriendState( Team, TeamSystem.MyTeam ) == TeamSystem.FriendlyStatus.Friendly;

    protected override int BuildHash()
    {
        return HashCode.Combine( Team );
    }

    protected async Task Decay( int lifetime = 5 )
    {
        Visible = true;
        await GameTask.DelaySeconds( lifetime );
        Visible = false;
        Delete();
    }

    public static void AddToHud( Team team )
    {
        var pnl = GunfightGame.Current.Hud.RootPanel.AddChild<WinningTeamDisplay>();
        pnl.Team = team;

        _ = pnl.Decay( 10 );
    }

    protected string TeamClasses()
    {
		var friendState = TeamSystem.GetFriendState( Team, TeamSystem.MyTeam );

		if ( friendState == TeamSystem.FriendlyStatus.Friendly ) return "friend";
		if ( friendState == TeamSystem.FriendlyStatus.Hostile ) return "enemy";
		if ( friendState == TeamSystem.FriendlyStatus.Neutral ) return "neutral";

		return "nothing";
    }
}